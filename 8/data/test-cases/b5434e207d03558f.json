{"uid":"b5434e207d03558f","name":"test_issue_name_selene","fullName":"tests.test_issue_name#test_issue_name_selene","historyId":"f5b342117f90601c90bab63688c9c4a1","time":{"start":1697240244050,"stop":1697240248148,"duration":4098},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5650a95effb3 <unknown>\n#1 0x5650a92c34a7 <unknown>\n#2 0x5650a92f6c93 <unknown>\n#3 0x5650a92f310c <unknown>\n#4 0x5650a9335ac6 <unknown>\n#5 0x5650a932c713 <unknown>\n#6 0x5650a92ff18b <unknown>\n#7 0x5650a92fff7e <unknown>\n#8 0x5650a95b58d8 <unknown>\n#9 0x5650a95b9800 <unknown>\n#10 0x5650a95c3cfc <unknown>\n#11 0x5650a95ba418 <unknown>\n#12 0x5650a958742f <unknown>\n#13 0x5650a95de4e8 <unknown>\n#14 0x5650a95de6b4 <unknown>\n#15 0x5650a95ef143 <unknown>\n#16 0x7fb58ba94b43 <unknown>","statusTrace":"def test_issue_name_selene():\n>       browser.open('/')\n\ntests/test_issue_name.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbc11197c90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x5650a95de6b4 \\\\u003Cunknown>\\\\n#15 0x5650a95ef143 \\\\u003Cunknown>\\\\n#16 0x7fb58ba94b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x5650a95effb3 <unknown>\nE       #1 0x5650a92c34a7 <unknown>\nE       #2 0x5650a92f6c93 <unknown>\nE       #3 0x5650a92f310c <unknown>\nE       #4 0x5650a9335ac6 <unknown>\nE       #5 0x5650a932c713 <unknown>\nE       #6 0x5650a92ff18b <unknown>\nE       #7 0x5650a92fff7e <unknown>\nE       #8 0x5650a95b58d8 <unknown>\nE       #9 0x5650a95b9800 <unknown>\nE       #10 0x5650a95c3cfc <unknown>\nE       #11 0x5650a95ba418 <unknown>\nE       #12 0x5650a958742f <unknown>\nE       #13 0x5650a95de4e8 <unknown>\nE       #14 0x5650a95de6b4 <unknown>\nE       #15 0x5650a95ef143 <unknown>\nE       #16 0x7fb58ba94b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_management","time":{"start":1697240244049,"stop":1697240244050,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5650a95effb3 <unknown>\n#1 0x5650a92c34a7 <unknown>\n#2 0x5650a92f6c93 <unknown>\n#3 0x5650a92f310c <unknown>\n#4 0x5650a9335ac6 <unknown>\n#5 0x5650a932c713 <unknown>\n#6 0x5650a92ff18b <unknown>\n#7 0x5650a92fff7e <unknown>\n#8 0x5650a95b58d8 <unknown>\n#9 0x5650a95b9800 <unknown>\n#10 0x5650a95c3cfc <unknown>\n#11 0x5650a95ba418 <unknown>\n#12 0x5650a958742f <unknown>\n#13 0x5650a95de4e8 <unknown>\n#14 0x5650a95de6b4 <unknown>\n#15 0x5650a95ef143 <unknown>\n#16 0x7fb58ba94b43 <unknown>","statusTrace":"def test_issue_name_selene():\n>       browser.open('/')\n\ntests/test_issue_name.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbc11197c90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x5650a95de6b4 \\\\u003Cunknown>\\\\n#15 0x5650a95ef143 \\\\u003Cunknown>\\\\n#16 0x7fb58ba94b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x5650a95effb3 <unknown>\nE       #1 0x5650a92c34a7 <unknown>\nE       #2 0x5650a92f6c93 <unknown>\nE       #3 0x5650a92f310c <unknown>\nE       #4 0x5650a9335ac6 <unknown>\nE       #5 0x5650a932c713 <unknown>\nE       #6 0x5650a92ff18b <unknown>\nE       #7 0x5650a92fff7e <unknown>\nE       #8 0x5650a95b58d8 <unknown>\nE       #9 0x5650a95b9800 <unknown>\nE       #10 0x5650a95c3cfc <unknown>\nE       #11 0x5650a95ba418 <unknown>\nE       #12 0x5650a958742f <unknown>\nE       #13 0x5650a95de4e8 <unknown>\nE       #14 0x5650a95de6b4 <unknown>\nE       #15 0x5650a95ef143 <unknown>\nE       #16 0x7fb58ba94b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[],"attachments":[{"uid":"86588cb2be0124ea","name":"stderr","source":"86588cb2be0124ea.txt","type":"text/plain","size":768}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"browser_management::0","time":{"start":1697240248255,"stop":1697240249206,"duration":951},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5649ef748fb3 <unknown>\n#1 0x5649ef41c4a7 <unknown>\n#2 0x5649ef44fc93 <unknown>\n#3 0x5649ef44c10c <unknown>\n#4 0x5649ef48eac6 <unknown>\n#5 0x5649ef485713 <unknown>\n#6 0x5649ef45818b <unknown>\n#7 0x5649ef458f7e <unknown>\n#8 0x5649ef70e8d8 <unknown>\n#9 0x5649ef712800 <unknown>\n#10 0x5649ef71ccfc <unknown>\n#11 0x5649ef713418 <unknown>\n#12 0x5649ef6e042f <unknown>\n#13 0x5649ef7374e8 <unknown>\n#14 0x5649ef7376b4 <unknown>\n#15 0x5649ef748143 <unknown>\n#16 0x7f0fda294b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 911, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/qa_guru_python_8_9/qa_guru_python_8_9/tests/conftest.py\", line 13, in browser_management\n    browser.quit()\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1205, in quit\n    self.driver.quit()\n    ^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/entity.py\", line 1100, in driver\n    return self.config.driver\n           ^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_issue_name"},{"name":"host","value":"fv-az216-790"},{"name":"thread","value":"2275-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_issue_name"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"a5385fbdc45e914c","reportUrl":"https://Y3ll0wman.github.io/qa_guru_python_8_9/7//#testresult/a5385fbdc45e914c","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5571eef26fb3 <unknown>\n#1 0x5571eebfa4a7 <unknown>\n#2 0x5571eec2dc93 <unknown>\n#3 0x5571eec2a10c <unknown>\n#4 0x5571eec6cac6 <unknown>\n#5 0x5571eec63713 <unknown>\n#6 0x5571eec3618b <unknown>\n#7 0x5571eec36f7e <unknown>\n#8 0x5571eeeec8d8 <unknown>\n#9 0x5571eeef0800 <unknown>\n#10 0x5571eeefacfc <unknown>\n#11 0x5571eeef1418 <unknown>\n#12 0x5571eeebe42f <unknown>\n#13 0x5571eef154e8 <unknown>\n#14 0x5571eef156b4 <unknown>\n#15 0x5571eef26143 <unknown>\n#16 0x7f8801a94b43 <unknown>","time":{"start":1697240088517,"stop":1697240090210,"duration":1693}},{"uid":"f387dd92d8ba27f7","reportUrl":"https://Y3ll0wman.github.io/qa_guru_python_8_9/6//#testresult/f387dd92d8ba27f7","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55976f320fb3 <unknown>\n#1 0x55976eff44a7 <unknown>\n#2 0x55976f027c93 <unknown>\n#3 0x55976f02410c <unknown>\n#4 0x55976f066ac6 <unknown>\n#5 0x55976f05d713 <unknown>\n#6 0x55976f03018b <unknown>\n#7 0x55976f030f7e <unknown>\n#8 0x55976f2e68d8 <unknown>\n#9 0x55976f2ea800 <unknown>\n#10 0x55976f2f4cfc <unknown>\n#11 0x55976f2eb418 <unknown>\n#12 0x55976f2b842f <unknown>\n#13 0x55976f30f4e8 <unknown>\n#14 0x55976f30f6b4 <unknown>\n#15 0x55976f320143 <unknown>\n#16 0x7f301f694b43 <unknown>","time":{"start":1697239878772,"stop":1697239880665,"duration":1893}}]},"tags":[]},"source":"b5434e207d03558f.json","parameterValues":[]}